From 1c2a6c56c5405556605ef1bae453217c0c1dc5d3 Mon Sep 17 00:00:00 2001
From: Julius Koskela <julius.koskela@unikie.com>
Date: Fri, 11 Jul 2025 02:16:16 +0300
Subject: [PATCH] arm/virt: Force nvidia_bpmp_guest device creation with custom
 DTB

When using -dtb option, QEMU skips some internal device creation that
would normally happen during machine initialization. However, the
nvidia_bpmp_guest device is essential for GPU passthrough on Jetson
platforms as it provides the MMIO region at 0x090c0000 for BPMP
communication.

This patch ensures the nvidia_bpmp_guest device is always created in
machvirt_init() regardless of whether a custom DTB is provided. The
device creation is guarded by checking if the VIRT_NVIDIA_BPMP_GUEST
memory region is defined.

Without this change, GPU VMs using custom DTBs fail with:
  NVRM: failed to get bpmp data

Signed-off-by: Julius Koskela <julius.koskela@unikie.com>
---
 hw/arm/virt.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/hw/arm/virt.c b/hw/arm/virt.c
index f8967de38b..10fd2e9f93 100644
--- a/hw/arm/virt.c
+++ b/hw/arm/virt.c
@@ -2433,6 +2433,13 @@ static void machvirt_init(MachineState *machine)
 
     create_platform_bus(vms);
 
+    /* NVIDIA BPMP guest device must be created even with custom DTB
+     * This is required for GPU passthrough on Jetson platforms
+     */
+    if (vms->memmap[VIRT_NVIDIA_BPMP_GUEST].base) {
+        nvidia_bpmp_guest_create(vms->memmap[VIRT_NVIDIA_BPMP_GUEST].base);
+    }
+
     if (machine->nvdimms_state->is_enabled) {
         const struct AcpiGenericAddress arm_virt_nvdimm_acpi_dsmio = {
             .space_id = AML_AS_SYSTEM_MEMORY,
-- 
2.49.0
